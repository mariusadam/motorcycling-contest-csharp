// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: motocontest.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Generated {
  /// <summary>
  /// The motorcycling contest service definition.
  /// </summary>
  public static partial class MotoContest
  {
    static readonly string __ServiceName = "motocontest.MotoContest";

    static readonly grpc::Marshaller<global::Generated.HelloRequest> __Marshaller_HelloRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generated.HelloRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generated.HelloReply> __Marshaller_HelloReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generated.HelloReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generated.SubscribeRequest> __Marshaller_SubscribeRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generated.SubscribeRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generated.Event> __Marshaller_Event = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generated.Event.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generated.LoginRequest> __Marshaller_LoginRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generated.LoginRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generated.LoginReply> __Marshaller_LoginReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generated.LoginReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generated.GetContestantsRequest> __Marshaller_GetContestantsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generated.GetContestantsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generated.GetContestantsReply> __Marshaller_GetContestantsReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generated.GetContestantsReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generated.SearchContestantsRequest> __Marshaller_SearchContestantsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generated.SearchContestantsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generated.SearchContestantsReply> __Marshaller_SearchContestantsReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generated.SearchContestantsReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generated.Empty> __Marshaller_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generated.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generated.GetRacesReply> __Marshaller_GetRacesReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generated.GetRacesReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generated.RegisterContestantRequest> __Marshaller_RegisterContestantRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generated.RegisterContestantRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generated.SimpleReply> __Marshaller_SimpleReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generated.SimpleReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generated.GetTeamsReply> __Marshaller_GetTeamsReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generated.GetTeamsReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generated.GetEngineCapacitiesReply> __Marshaller_GetEngineCapacitiesReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generated.GetEngineCapacitiesReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generated.AddTeamRequest> __Marshaller_AddTeamRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generated.AddTeamRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generated.RaceParticipants> __Marshaller_RaceParticipants = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generated.RaceParticipants.Parser.ParseFrom);

    static readonly grpc::Method<global::Generated.HelloRequest, global::Generated.HelloReply> __Method_SayHello = new grpc::Method<global::Generated.HelloRequest, global::Generated.HelloReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SayHello",
        __Marshaller_HelloRequest,
        __Marshaller_HelloReply);

    static readonly grpc::Method<global::Generated.HelloRequest, global::Generated.HelloReply> __Method_SayHelloAgain = new grpc::Method<global::Generated.HelloRequest, global::Generated.HelloReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SayHelloAgain",
        __Marshaller_HelloRequest,
        __Marshaller_HelloReply);

    static readonly grpc::Method<global::Generated.SubscribeRequest, global::Generated.Event> __Method_Subscribe = new grpc::Method<global::Generated.SubscribeRequest, global::Generated.Event>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "Subscribe",
        __Marshaller_SubscribeRequest,
        __Marshaller_Event);

    static readonly grpc::Method<global::Generated.LoginRequest, global::Generated.LoginReply> __Method_Login = new grpc::Method<global::Generated.LoginRequest, global::Generated.LoginReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Login",
        __Marshaller_LoginRequest,
        __Marshaller_LoginReply);

    static readonly grpc::Method<global::Generated.GetContestantsRequest, global::Generated.GetContestantsReply> __Method_GetContestants = new grpc::Method<global::Generated.GetContestantsRequest, global::Generated.GetContestantsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetContestants",
        __Marshaller_GetContestantsRequest,
        __Marshaller_GetContestantsReply);

    static readonly grpc::Method<global::Generated.SearchContestantsRequest, global::Generated.SearchContestantsReply> __Method_Search = new grpc::Method<global::Generated.SearchContestantsRequest, global::Generated.SearchContestantsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Search",
        __Marshaller_SearchContestantsRequest,
        __Marshaller_SearchContestantsReply);

    static readonly grpc::Method<global::Generated.Empty, global::Generated.GetRacesReply> __Method_GetRaces = new grpc::Method<global::Generated.Empty, global::Generated.GetRacesReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRaces",
        __Marshaller_Empty,
        __Marshaller_GetRacesReply);

    static readonly grpc::Method<global::Generated.RegisterContestantRequest, global::Generated.SimpleReply> __Method_RegisterContestant = new grpc::Method<global::Generated.RegisterContestantRequest, global::Generated.SimpleReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RegisterContestant",
        __Marshaller_RegisterContestantRequest,
        __Marshaller_SimpleReply);

    static readonly grpc::Method<global::Generated.Empty, global::Generated.GetTeamsReply> __Method_GetTeams = new grpc::Method<global::Generated.Empty, global::Generated.GetTeamsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTeams",
        __Marshaller_Empty,
        __Marshaller_GetTeamsReply);

    static readonly grpc::Method<global::Generated.Empty, global::Generated.GetEngineCapacitiesReply> __Method_GetEngineCapacities = new grpc::Method<global::Generated.Empty, global::Generated.GetEngineCapacitiesReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEngineCapacities",
        __Marshaller_Empty,
        __Marshaller_GetEngineCapacitiesReply);

    static readonly grpc::Method<global::Generated.AddTeamRequest, global::Generated.SimpleReply> __Method_AddTeam = new grpc::Method<global::Generated.AddTeamRequest, global::Generated.SimpleReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddTeam",
        __Marshaller_AddTeamRequest,
        __Marshaller_SimpleReply);

    static readonly grpc::Method<global::Generated.Empty, global::Generated.RaceParticipants> __Method_GetRacesParticipants = new grpc::Method<global::Generated.Empty, global::Generated.RaceParticipants>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetRacesParticipants",
        __Marshaller_Empty,
        __Marshaller_RaceParticipants);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Generated.MotocontestReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of MotoContest</summary>
    public abstract partial class MotoContestBase
    {
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Generated.HelloReply> SayHello(global::Generated.HelloRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Sends another greeting
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Generated.HelloReply> SayHelloAgain(global::Generated.HelloRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// send subscribe requests
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      public virtual global::System.Threading.Tasks.Task Subscribe(global::Generated.SubscribeRequest request, grpc::IServerStreamWriter<global::Generated.Event> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Generated.LoginReply> Login(global::Generated.LoginRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Generated.GetContestantsReply> GetContestants(global::Generated.GetContestantsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Generated.SearchContestantsReply> Search(global::Generated.SearchContestantsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Generated.GetRacesReply> GetRaces(global::Generated.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Generated.SimpleReply> RegisterContestant(global::Generated.RegisterContestantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Generated.GetTeamsReply> GetTeams(global::Generated.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Generated.GetEngineCapacitiesReply> GetEngineCapacities(global::Generated.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Generated.SimpleReply> AddTeam(global::Generated.AddTeamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetRacesParticipants(global::Generated.Empty request, grpc::IServerStreamWriter<global::Generated.RaceParticipants> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for MotoContest</summary>
    public partial class MotoContestClient : grpc::ClientBase<MotoContestClient>
    {
      /// <summary>Creates a new client for MotoContest</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public MotoContestClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for MotoContest that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public MotoContestClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected MotoContestClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected MotoContestClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Generated.HelloReply SayHello(global::Generated.HelloRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SayHello(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Generated.HelloReply SayHello(global::Generated.HelloRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SayHello, null, options, request);
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Generated.HelloReply> SayHelloAsync(global::Generated.HelloRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SayHelloAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Generated.HelloReply> SayHelloAsync(global::Generated.HelloRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SayHello, null, options, request);
      }
      /// <summary>
      /// Sends another greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Generated.HelloReply SayHelloAgain(global::Generated.HelloRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SayHelloAgain(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends another greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Generated.HelloReply SayHelloAgain(global::Generated.HelloRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SayHelloAgain, null, options, request);
      }
      /// <summary>
      /// Sends another greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Generated.HelloReply> SayHelloAgainAsync(global::Generated.HelloRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SayHelloAgainAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends another greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Generated.HelloReply> SayHelloAgainAsync(global::Generated.HelloRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SayHelloAgain, null, options, request);
      }
      /// <summary>
      /// send subscribe requests
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncServerStreamingCall<global::Generated.Event> Subscribe(global::Generated.SubscribeRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Subscribe(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// send subscribe requests
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncServerStreamingCall<global::Generated.Event> Subscribe(global::Generated.SubscribeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_Subscribe, null, options, request);
      }
      public virtual global::Generated.LoginReply Login(global::Generated.LoginRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Login(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Generated.LoginReply Login(global::Generated.LoginRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Login, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Generated.LoginReply> LoginAsync(global::Generated.LoginRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return LoginAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Generated.LoginReply> LoginAsync(global::Generated.LoginRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Login, null, options, request);
      }
      public virtual global::Generated.GetContestantsReply GetContestants(global::Generated.GetContestantsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetContestants(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Generated.GetContestantsReply GetContestants(global::Generated.GetContestantsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetContestants, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Generated.GetContestantsReply> GetContestantsAsync(global::Generated.GetContestantsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetContestantsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Generated.GetContestantsReply> GetContestantsAsync(global::Generated.GetContestantsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetContestants, null, options, request);
      }
      public virtual global::Generated.SearchContestantsReply Search(global::Generated.SearchContestantsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Search(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Generated.SearchContestantsReply Search(global::Generated.SearchContestantsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Search, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Generated.SearchContestantsReply> SearchAsync(global::Generated.SearchContestantsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Generated.SearchContestantsReply> SearchAsync(global::Generated.SearchContestantsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Search, null, options, request);
      }
      public virtual global::Generated.GetRacesReply GetRaces(global::Generated.Empty request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetRaces(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Generated.GetRacesReply GetRaces(global::Generated.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRaces, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Generated.GetRacesReply> GetRacesAsync(global::Generated.Empty request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetRacesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Generated.GetRacesReply> GetRacesAsync(global::Generated.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRaces, null, options, request);
      }
      public virtual global::Generated.SimpleReply RegisterContestant(global::Generated.RegisterContestantRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RegisterContestant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Generated.SimpleReply RegisterContestant(global::Generated.RegisterContestantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RegisterContestant, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Generated.SimpleReply> RegisterContestantAsync(global::Generated.RegisterContestantRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RegisterContestantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Generated.SimpleReply> RegisterContestantAsync(global::Generated.RegisterContestantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RegisterContestant, null, options, request);
      }
      public virtual global::Generated.GetTeamsReply GetTeams(global::Generated.Empty request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetTeams(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Generated.GetTeamsReply GetTeams(global::Generated.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTeams, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Generated.GetTeamsReply> GetTeamsAsync(global::Generated.Empty request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetTeamsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Generated.GetTeamsReply> GetTeamsAsync(global::Generated.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTeams, null, options, request);
      }
      public virtual global::Generated.GetEngineCapacitiesReply GetEngineCapacities(global::Generated.Empty request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetEngineCapacities(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Generated.GetEngineCapacitiesReply GetEngineCapacities(global::Generated.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEngineCapacities, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Generated.GetEngineCapacitiesReply> GetEngineCapacitiesAsync(global::Generated.Empty request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetEngineCapacitiesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Generated.GetEngineCapacitiesReply> GetEngineCapacitiesAsync(global::Generated.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEngineCapacities, null, options, request);
      }
      public virtual global::Generated.SimpleReply AddTeam(global::Generated.AddTeamRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddTeam(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Generated.SimpleReply AddTeam(global::Generated.AddTeamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddTeam, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Generated.SimpleReply> AddTeamAsync(global::Generated.AddTeamRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddTeamAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Generated.SimpleReply> AddTeamAsync(global::Generated.AddTeamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddTeam, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Generated.RaceParticipants> GetRacesParticipants(global::Generated.Empty request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetRacesParticipants(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Generated.RaceParticipants> GetRacesParticipants(global::Generated.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetRacesParticipants, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override MotoContestClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MotoContestClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(MotoContestBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SayHello, serviceImpl.SayHello)
          .AddMethod(__Method_SayHelloAgain, serviceImpl.SayHelloAgain)
          .AddMethod(__Method_Subscribe, serviceImpl.Subscribe)
          .AddMethod(__Method_Login, serviceImpl.Login)
          .AddMethod(__Method_GetContestants, serviceImpl.GetContestants)
          .AddMethod(__Method_Search, serviceImpl.Search)
          .AddMethod(__Method_GetRaces, serviceImpl.GetRaces)
          .AddMethod(__Method_RegisterContestant, serviceImpl.RegisterContestant)
          .AddMethod(__Method_GetTeams, serviceImpl.GetTeams)
          .AddMethod(__Method_GetEngineCapacities, serviceImpl.GetEngineCapacities)
          .AddMethod(__Method_AddTeam, serviceImpl.AddTeam)
          .AddMethod(__Method_GetRacesParticipants, serviceImpl.GetRacesParticipants).Build();
    }

  }
}
#endregion
